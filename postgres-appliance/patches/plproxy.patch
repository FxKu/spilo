diff -urN postgresql-plproxy-2.8.orig/src/cluster.c postgresql-plproxy-2.8/src/cluster.c
--- postgresql-plproxy-2.8.orig/src/cluster.c	2017-10-08 10:53:35.000000000 +0200
+++ postgresql-plproxy-2.8/src/cluster.c	2019-04-25 17:00:20.293453473 +0200
@@ -730,7 +730,11 @@
 	tup = SearchSysCache(NAMESPACENAME, PointerGetDatum("plproxy"), 0, 0, 0);
 	if (HeapTupleIsValid(tup))
 	{
+#if PG_VERSION_NUM >= 120000
+		Oid 		namespaceId = ((Form_pg_namespace) GETSTRUCT(tup))->oid;
+#else
 		Oid 		namespaceId = HeapTupleGetOid(tup);
+#endif
 		Oid			paramOids[] = { TEXTOID };
 		oidvector	*parameterTypes = buildoidvector(paramOids, 1);
 		const char	**funcname;
diff -urN postgresql-plproxy-2.8.orig/src/function.c postgresql-plproxy-2.8/src/function.c
--- postgresql-plproxy-2.8.orig/src/function.c	2019-04-25 16:59:38.000000000 +0200
+++ postgresql-plproxy-2.8/src/function.c	2019-04-25 17:00:39.509782878 +0200
@@ -251,7 +251,11 @@
 
 	f = palloc0(sizeof(*f));
 	f->ctx = f_ctx;
+#if PG_VERSION_NUM >= 120000
+	f->oid = ((Form_pg_proc) GETSTRUCT(proc_tuple))->oid;
+#else
 	f->oid = HeapTupleGetOid(proc_tuple);
+#endif
 	plproxy_set_stamp(&f->stamp, proc_tuple);
 
 	if (fn_returns_dynamic_record(proc_tuple))
@@ -521,7 +525,13 @@
 	/* sanity check */
 	if (f->run_type == R_ALL && (fcinfo
 								 ? !fcinfo->flinfo->fn_retset
-								 : !get_func_retset(HeapTupleGetOid(proc_tuple))))
+								 : !get_func_retset(
+#if PG_VERSION_NUM >= 120000
+										((Form_pg_proc) GETSTRUCT(proc_tuple))->oid
+#else
+										HeapTupleGetOid(proc_tuple)
+#endif
+                                                                     )))
 		plproxy_error(f, "RUN ON ALL requires set-returning function");
 
 	return f;
diff -urN postgresql-plproxy-2.8.orig/src/rowstamp.h postgresql-plproxy-2.8/src/rowstamp.h
--- postgresql-plproxy-2.8.orig/src/rowstamp.h	2017-10-08 10:53:35.000000000 +0200
+++ postgresql-plproxy-2.8/src/rowstamp.h	2019-04-25 17:00:29.885617884 +0200
@@ -62,7 +62,11 @@
 
 static inline void scstamp_set(int cache, SysCacheStamp *stamp, HeapTuple tup)
 {
+#if PG_VERSION_NUM >= 120000
+	Oid oid = ((Form_pg_foreign_server) GETSTRUCT(tup))->oid;
+#else
 	Oid oid = HeapTupleGetOid(tup);
+#endif
 	stamp->cacheid = cache;
 	stamp->hashValue = GetSysCacheHashValue1(cache, oid);
 }
